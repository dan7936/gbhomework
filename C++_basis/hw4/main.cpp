#include <iostream>
#include <clocale>

// объявим нужные переменные до основной программы, чтобы не работать в программе с magic numbers, также применим указатели в некоторых заданиях для повторения и практики
// задаем константу для очистки буфера:
const size_t uiBufErazer{ 35400 }, * const pBufEraz = &uiBufErazer; 

// объявляем переменные для 1го задания и конст указатели на них:
float fT1VarInt1{}, fT1VarInt2{}, * const pT1Var1 = &fT1VarInt1, * const pT1Var2 = &fT1VarInt2; 

// объявляем константы для условия в 1-м задании, 1-я константа так же будет применима для условия 2-го задания:
const int iT1a2Cond1{ 10 }, iT1Cond2{ 20 }; 

// объявляем две переменные для 2го задания, они должны быть константами по условиям задания, а мы сделаем указатели контантными:
int iT2ConstInt1{5}, iT2ConstInt2{5}; 

// объявляем конст указатели и делаем переменные на которые указывает указатель тоже не изменяемыми через этот указатель:
const int * const pT2Const1 = &iT2ConstInt1, * const pT2Const2 = &iT2ConstInt2; 

// прописываем условия для 3го задания:
enum Task3Conditions { eT3VarInit = 1, eT3VarStep = 2, eT3Counter = 50 }; 

// прописываем условия для 4го задания:
enum Task4Conditions { eT4Cond1 = 2, eT4Cond2 = 0 }; 

// прописываем условия для 5го задания:
enum Task5Conditions { eT5LowLim = 1, eT5UppLim = 3000, eT5LYCond1 = 4, eT5LYCond2 = 100, eT5LYCond3 = 400, eT5Zero = 0 };

int main()
{
	setlocale(LC_ALL, "Russian");
	/*
	=========================================================================================================================
	-------------------------------------------------------Task 1------------------------------------------------------------
	=========================================================================================================================
	Написать программу, проверяющую что сумма двух (введенных с клавиатуры) чисел лежит в пределах от 10 до 20 (включительно), 
	если да – вывести строку "true", в противном случае – "false";

	применяем указатели для отработки.
	*/ 
	std::cout << "----------Task 1----------" << std::endl;
	{
		while (true)
		{
			std::cout << "Введите пожалуйста 2 числа: " << std::endl;
			std::cin >> *pT1Var1 >> *pT1Var2; // так как значения на котороем указываем типа float можно вводить и дробные числа
			if (std::cin.fail())
			{
				std::cin.clear();
				std::cin.ignore(*pBufEraz, '\n');
				std::cout << "Вы ввели не числа, пожалуйста попробуйте еще раз." << std::endl;
			}
			else
			{
				break;
			}
		}
		if (*pT1Var1 + *pT1Var2 >= iT1a2Cond1 && *pT1Var1 + *pT1Var2 <= iT1Cond2)
		{
			std::cout << "TRUE" << std::endl;
		}
		else
		{
			std::cout << "FALSE" << std::endl;
		}
	}
	/*
	=========================================================================================================================
	-------------------------------------------------------Task 2------------------------------------------------------------
	=========================================================================================================================
	Написать программу, выводящую на экран строку “true”, если две целочисленные константы, 
	объявленные в её начале либо обе равны десяти сами по себе, либо их сумма равна десяти. Иначе "false".

	применяем указатели для отработки.
	*/
	std::cout << "----------Task 2----------" << std::endl;
	std::cout << "До инициализации нашей программы мы задали следующие числа: " << *pT2Const1 << " и " << *pT2Const2 << std::endl;
	int iResult = *pT2Const1 + *pT2Const2;
	if (*pT2Const1 == iT1a2Cond1 && *pT2Const2 == iT1a2Cond1 || iResult == iT1a2Cond1 )
	{
		std::cout << "TRUE" << std::endl;
	}
	else
	{
		std::cout << "FALSE" << std::endl;
	}
	/*
	=========================================================================================================================
	-------------------------------------------------------Task 3------------------------------------------------------------
	=========================================================================================================================
	Написать программу которая выводит на экран список всех нечетных чисел он 1 до 50. 
	Например: "Your numbers: 1 3 5 7 9 11 13 …". Для решения используйте любой С++ цикл.
	*/
	std::cout << "----------Task 3----------" << std::endl;
	{
		int Step{};
		// один вариант вывода
		std::cout << "Попробуем 1й вариант вывода." << std::endl;
		{
			for (Step = eT3VarInit; Step <= eT3Counter;)
			{
				std::cout << Step << " ";
				Step += eT3VarStep;
			}
		}
		std::cout << std::endl;
		// второй вариант вывода
		std::cout << "Попробуем 2й вариант вывода." << std::endl;
		{
			Step = eT3VarInit;
			do
			{
				std::cout << Step << " ";
				Step += eT3VarStep;
			} while (Step <= eT3Counter);
		}
		std::cout << std::endl;
		// третий вариант вывода
		std::cout << "Попробуем 3й вариант вывода." << std::endl;
		{
			Step = eT3VarInit;
			while (Step <= eT3Counter)
			{
				std::cout << Step << " ";
				Step += eT3VarStep;
			}
		}
		std::cout << std::endl;
	}
	/*
	=========================================================================================================================
	-------------------------------------------------------Task 4------------------------------------------------------------
	=========================================================================================================================
	Со звёздочкой. Написать программу, проверяющую, является ли некоторое число - простым. 
	Простое число — это целое положительное число, которое делится без остатка только на единицу и себя само.
	*/
	std::cout << "----------Task 4----------" << std::endl;
	{
		unsigned int iT4Var{};
		while (true)
		{
			std::cout << "Введите пожалуйста целое положительное число: " << std::endl;
			std::cin >> iT4Var; 
			if (std::cin.fail())
			{
				std::cin.clear();
				std::cin.ignore(*pBufEraz, '\n');
				std::cout << "Вы ввели не целое положительное, пожалуйста попробуйте еще раз." << std::endl;
			}
			else
			{
				break;
			}
		}
		if (iT4Var % eT4Cond1 > eT4Cond2 || iT4Var == eT4Cond1)
		{
			std::cout << "Ваше число простое." << std::endl;
		}
		else
		{
			std::cout << "Ваше число не простое." << std::endl;
		}
	}
	/*
	=========================================================================================================================
	-------------------------------------------------------Task 5------------------------------------------------------------
	=========================================================================================================================
	Со звёздочкой. Пользователь вводит с клавиатуры число (год): от 1 до 3000. Написать программу, 
	которая определяет является ли этот год високосным. Каждый 4-й год является високосным, кроме каждого 100-го, 
	при этом каждый 400-й – високосный. Вывести результаты работы программы в консоль. 
	*/
	std::cout << "----------Task 5----------" << std::endl;
	{
		unsigned int Year{};
		while (true)
		{
			std::cout << "Введите пожалуйста год от 1 до 3000, определим високосный он или нет: " << std::endl;
			std::cin >> Year; 
			if (std::cin.fail() || Year <= eT5LowLim || Year > eT5UppLim)
			{
				std::cin.clear();
				std::cin.ignore(*pBufEraz, '\n');
				std::cout << "Вы ввели не подходящее значение, пожалуйста попробуйте еще раз." << std::endl;
			}
			else
			{
				break;
			}
		}
		if (Year % eT5LYCond1 == eT5Zero && Year % eT5LYCond2 != eT5Zero || Year % eT5LYCond3 == eT5Zero)
		{
			std::cout << "Год високосный." << std::endl;
		}
		else
		{
			std::cout << "Год не високосный." << std::endl;
		}
	}
	return 0;
}